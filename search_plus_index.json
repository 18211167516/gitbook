{"./":{"url":"./","title":"介绍","keywords":"","body":"1、项目说明 [!NOTE] 该项目为建行ccb Saas项目文档 2、gitbook编写makedown 提示 > [!TIP] > 这是一个简单的Note类型的使用，所有的属性都是默认值。 > [!WARNING] > 我是警告 > [!DANGER] > 我是DANGER 3、错误日志查询（测试线） 登录阿里云日志 地址 账号密码 logs@31557544.onaliyun.com AliLog@20190826 最近访问->日志服务->测试机php-laravel框架日志->选日志库 4、上线流程 准备部署文件 合并develop到master(如果有develop) 提供部署文件 部署文档案例 [!WARNING] 只需要给hd和crm的即可 其余的sql语句提供相关主管 jxjkhd.kerlala.com: routes/activitynmx.php app/Http/Controllers/Activity/Ccb/CrossborderController.php app/Services/Activity/Ccb/CrossborderService.php jxjkhdcrm.kerlala.com: app/Http/Requests/Activity/CrossborderRequest.php app/Services/CrossborderService.php resources/views/spa/crossborder/v1/index.blade.php powered by Gitbook该文件最后修改时间： 2021-05-31 15:06:31 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"入门/":{"url":"入门/","title":"入门指南","keywords":"","body":"入门指南.md [!NOTE] ccb整体项目的环境安装、项目启动、活动开发流程 希望你有所收获 powered by Gitbook该文件最后修改时间： 2021-05-26 16:14:57 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"入门/php-install.html":{"url":"入门/php-install.html","title":"php-docker环境安装","keywords":"","body":"php环境安装 1、docker更换阿里云镜像源 1.在windows命令行执行docker-machine ssh [machine-name]进入VM bash 2.sudo vi /var/lib/boot2docker/profile 3.在--label provider=virtualbox的下一行添加 --registry-mirror=https://k5paawyp.mirror.aliyuncs.com 4.重启docker服务： sudo /etc/init.d/docker restart或者重启VM：exit退出VM bash， 在windows命令行中执行docker-machine restart 5.直接执行命令：ggdocker-machine ssh default \"echo 'EXTRA_ARGS=\\\"--registry-mirror=https://k5paawyp.mirror.aliyuncs.com\\\"' sudo tee -a /var/lib/boot2dock er/profile\" docker-machine restart default 2、基于docker [!NOTE] 目录结构 ├─www （项目目录） ├─config （配置文件目录） | ├─conf.d （nginx的conf.d） | ├─nginx.conf （nginx配置文件） | ├─php.ini （php.ini） | ├─php-fpm.conf（php-fmp配置文件） | ├─mysql.cnf （mysql配置） | ├─redis.conf （redis配置） ├─log （日志目录） | ├─nginx （nginx日志） | ├─php （php日志） | ├─mysql （mysql日志） ├─mysql （mysql数据目录） ├─docker-compose.yaml （docker-composer） [!NOTE] docker-composer.yaml version: \"3\" services: nginx: image: nginx:1.15.7-alpine ports: - \"80:80\" - \"443:443\" volumes: - ./www:/var/www/html/:rw - ./conf/conf.d/:/etc/nginx/conf.d/:rw - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro - ./log/nginx:/var/log/nginx/:rw environment: TZ: \"Asia/Shanghai\" restart: always networks: - default php72: image: registry.cn-hangzhou.aliyuncs.com/jhmh-lnmp/php:7.2 hostname: php72 volumes: - ./www:/var/www/html/:rw - ./conf/php.ini:/usr/local/etc/php/php.ini:ro - ./conf/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:rw - ./log/php:/var/log/php restart: always container_name: my_php72 cap_add: - SYS_PTRACE networks: - default php74: image: registry.cn-hangzhou.aliyuncs.com/jhmh-lnmp/php:7.4 hostname: php72 volumes: - ./www:/var/www/html/:rw - ./conf/php.ini:/usr/local/etc/php/php.ini:ro - ./conf/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:rw - ./log/php:/var/log/php restart: always cap_add: - SYS_PTRACE networks: - default mysql: image: mysql:5.6 ports: - \"3306:3306\" volumes: - ./conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro - ./mysql:/var/lib/mysql/new/:rw - ./log/mysql/:/var/log/mysql/:rw restart: always networks: - default environment: MYSQL_ROOT_PASSWORD: \"123456\" TZ: \"$TZ\" redis: image: redis:5.0.3-alpine ports: - \"6379:6379\" volumes: - ./conf/redis.conf:/etc/redis.conf:ro restart: always entrypoint: [\"redis-server\", \"/etc/redis.conf\"] environment: TZ: \"TZ=Asia/Shanghai\" networks: - default memcached: image: memcached:latest ports: - \"11211:11211\" 3、docker-compose docker-compose up 编译并启动 docker-compose restart 重启容器 powered by Gitbook该文件最后修改时间： 2021-05-26 16:09:26 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"入门/gitlab.html":{"url":"入门/gitlab.html","title":"gitlab项目","keywords":"","body":"git代码托管以及代码管理 [!TIP] 系统后台 git clone git@xxx.git [!TIP] crm git clone git@xxx.git [!TIP] hd git clone git@xxx.git powered by Gitbook该文件最后修改时间： 2021-05-26 18:44:39 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"入门/start/":{"url":"入门/start/","title":"项目配置以及启动","keywords":"","body":"项目配置以及启动.md powered by Gitbook该文件最后修改时间： 2021-05-24 17:48:14 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"入门/start/admin.html":{"url":"入门/start/admin.html","title":"系统后台","keywords":"","body":" [!TIP] nginx的配置 server { listen 80; server_name admin.ccbhddev.kerlala.com; root /var/www/html/admin.ccbhd.kerlala.com/public; index index.php index.html index.htm; #charset koi8-r; #access_log /var/log/nginx/log/host.access.log main; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } location / { try_files $uri $uri/ /index.php?$query_string; } location ~ \\.php$ { fastcgi_pass php74:9000; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; } } powered by Gitbook该文件最后修改时间： 2021-05-26 17:09:48 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"入门/start/crm.html":{"url":"入门/start/crm.html","title":"crm后台","keywords":"","body":" [!TIP] nginx的配置 server { listen 80; server_name ccbhdcrmdev.kerlala.com; root /var/www/html/ccbhdcrm.kerlala.com/public; index index.php index.html index.htm; #charset koi8-r; #access_log /var/log/nginx/log/host.access.log main; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } location / { try_files $uri $uri/ /index.php?$query_string; } location /app { proxy_pass https://ccbresbch.kerlala.com/projects/hd/index.html; } location ^~ /res-edit/ { proxy_pass http://ccbresbch.kerlala.com/projects/hd/edit/; } location ^~ /apihdcrm/ { proxy_pass https://ccbhdcrmbch.kerlala.com/; } # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # location ~ \\.php$ { fastcgi_pass php74:9000; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; } } powered by Gitbook该文件最后修改时间： 2021-05-26 17:15:13 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"入门/start/hd.html":{"url":"入门/start/hd.html","title":"hd接口","keywords":"","body":" [!TIP] nginx的配置 server { listen 80; server_name ccbhddev.kerlala.com; root /var/www/html/ccbhd.kerlala.com/public; index index.php index.html index.htm; error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } location / { try_files $uri $uri/ /index.php?$query_string; } # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # location ~ \\.php$ { fastcgi_pass php74:9000; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; } } powered by Gitbook该文件最后修改时间： 2021-05-26 17:15:07 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"入门/create.html":{"url":"入门/create.html","title":"入门级活动创建","keywords":"","body":"活动创建全流程.md [!TIP] 系统后台创建产品 [!TIP] crm创建活动 powered by Gitbook该文件最后修改时间： 2021-05-26 17:07:15 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"核心架构/":{"url":"核心架构/","title":"核心架构","keywords":"","body":" [!TIP] 一个活动如何开发，以及前台访问活动时，后台做了什么处理，前端做了什么处理 powered by Gitbook该文件最后修改时间： 2021-05-27 15:01:56 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"核心架构/admin.html":{"url":"核心架构/admin.html","title":"创建产品","keywords":"","body":"创建产品 config/activity.php app/http/Controllers/crm/ProductsController.php 保存后在DB_CONNECTION = mysql下的 ccbhd下的 products表 1.1、模板参数 activity.status //开启状态 activity.is_white_on //白名单 activity.is_black_on //黑名单 activity.is_valid //是否有效 templet_set.is_lamp_on //跑马灯开关 templet_set.custom_lamp_text //跑马灯自定义文案 templet_set.nowin_subtitle //未中奖文案 indicatorTask.complete_one //循环次数 indicatorTask.ccb_feedback_number //回馈编号 达标查询使用 indicatorTask.service_no // signup.default_num //初始报名机会 signup.max_num //最大报名次数 signup.day_max_num //每天报名次数 signup.max_person //最大报名人数 signup.validator //验证字段 signup.is_batch //是否跑批 { \"activity\": { \"title\": \"建行跨境分会场\", \"start_time\": \"now\", \"end_time\": \"today +7 day 0:0:0\", \"platforms\": 41, \"status\": 2, \"is_white_on\": \"2\", \"is_black_on\": \"1\", \"is_valid\": 1, \"pic_url\": \"https://ccbhdimg.kerlala.com/hd/crossborder/v1/b.jpg\", \"rules\": \"默认规则\", \"share_set\": { \"share_title\": \"默认\", \"share_desc\": \"默认\", \"share_pic\": \"https://ccbhdimg.kerlala.com/hd/community/v1/thumb.png\" }, \"templet_set\": { \"background_pic\": \"https://hdimg.kerlala.com/hd/community/v1/cover.png\", \"is_draw_info_on\": \"1\", \"is_indicator_on\": \"2\", \"is_lamp_on\": \"1\", \"custom_lamp_text\": \"\", \"person_is_show\": \"1\", \"no_white_text\": \"很遗憾您暂时还不能参与~\", \"logo_url\": \"https://ccbhdimg.kerlala.com/hd/czdraw/wheelnew_v1/logo.png\", \"logo_is_show\": \"1\", \"sub_name\": \"\", \"title_pic\": \"https://ccbhdimg.kerlala.com/hd/lctopic/title.png\", \"duihuan_url\": \"\", \"home_url\": \"\", \"prize_url\": \"\", \"ccb_detail_url\": \"\", \"nowin_subtitle\": \"\" }, \"sys_templet_set\": { \"ccb_activity_number\": \"\", \"ccb_feedback_number\": \"\", \"java_ccb_guid\": \"\" }, \"crm_templet_set\": [], \"ext\": {} }, \"prize\": [ { \"name\": \"奖品\", \"jackpot\": 3, \"pic_url\": \"https://ccbhdimg.kerlala.com/hd/common/prize_default.png\", \"type\": \"jccb\", \"is_dzq\": 2, \"num\": 0, \"money\": 0, \"probability_num\": 0, \"prize_max_win_num\": 0, \"prize_person_max_win_num\": 0, \"prize_person_day_max_win_num\": 0, \"is_valid\": 1, \"desc\": \"请您输入奖品说明\", \"other_temp_set\": { \"ccb_rights_number\": \"\", \"ccb_bkright_actnum\": \"\", \"ccb_bkright_num\": \"\" } } ], \"goods\": [], \"indicatorTask\": [ { \"id\": \"\", \"indicator_id\": \"\", \"complete_one\": 0, \"number_limit\": 1, \"limit_status\": \"1\", \"task_link\": \"\", \"ccb_feedback_number\": \"\", \"service_no\": \"\", \"sort\": 1, \"show\": 1, \"ext\": { \"prize_id\": \"\" }, \"is_loop\": \"2\", \"day_limit\": 0, \"every_day_num\": 0 } ], \"advert\": [ { \"title\": \"\", \"position\": \"\", \"img_url\": \"\", \"img_link\": \"\", \"img_title\": \"\", \"is_show\": 2 } ], \"draw\": { \"probability\": 1, \"draw_num_type\": 1, \"default_draw_num\": 0, \"day_add_draw_num\": 5, \"person_day_max_draw_num\": 0, \"person_max_draw_num\": 0, \"person_day_max_win_num\": 0, \"person_max_win_num\": 0, \"day_max_win_num\": 0, \"win_start_time\": 0, \"win_end_time\": 24, \"forward_person_num\": 0, \"forward_draw_count\": 0, \"forward_draw_count_limit\": 0, \"nowin_text\": \"\", \"nowin_subtitle\": \"\", \"redpack_money\": 0, \"many_probability_set\": \"\", \"setting\": \"\" }, \"signup\": { \"start_time\": 0, \"end_time\": 0, \"default_num\": 1, \"max_num\": 1, \"day_max_num\": 0, \"max_person\": 0, \"validator\": \"phone,idcard4,idcardtype\", \"is_batch\": 1, \"setting\": { \"ccbsms\": 1, \"success_text\": \"报名成功\", \"fail_text\": \"\" } } } powered by Gitbook该文件最后修改时间： 2021-05-27 15:02:12 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"核心架构/crm.html":{"url":"核心架构/crm.html","title":"创建活动","keywords":"","body":"创建活动 [!TIP] 核心关键点 在路由：web.php下activitys.create 控制器：Http\\Controllers\\Activity\\ActivitysController.php Servers/ActivitysService.php create 1. 获取产品信息（products） getProductParams($productId) 2. 获取主账号信息 //可以考虑 Admin::getMasterAdminId() 优化 $masterAdminInfo = Admin::findOrFail(Admin::getMasterAdminId()); 3. 初始化活动总表 initRoute() 1、生成数据到activity_route 2、生成sn 3、计算分表规则 activity_route->table 4、计算是否有组件需要再次分表规则 activity_route->sub_table 5、更新表、返回活动信息 4. 全局request类添加attributes request()->attributes->add([ 'activityId' => $activity->id, //活动ID 全局id 'activitySn' => $activity->sn, //活动sn 'activityType' => $activity->activity_type, //活动类型 'database' => 'activity_' . $activity->database, //落得库 'masterId' => $activity->master_id,//主账号ID 'table' => $activity->table //分表 ]); 主要在Model层使用 [!TIP] Model\\Traits\\InitTable.php $activityType = request()->attributes->get('activityType'); //理论上在获取到主账号信息的时候就应该往request加，应该不需要从缓存或者表里取 $masterId = request()->attributes->get('masterId') ?? Admin::getMasterAdminId(); //分表 $table = request()->attributes->get('table') ? '_' . request()->attributes->get('table') : ''; //理论上在获取到主账号信息的时候就应该往request加，应该不需要从缓存或者表里取 $database = request()->attributes->get('database') ?? 'activity_' . Cache::rememberForever('database_' . $masterId, function () use ($masterId) { return Admin::where('id', $masterId)->value('database'); }); //二级分表 $subList = request()->attributes->get('sub_table'); $subTable = 0; if (!empty($subList)){ foreach($subList as $k => $v) { if(stripos($this->table,$k) !== false) { $subTable = $v; break; } } } $this->table = sprintf( $this->table, $activityType,//%$1s $masterId,//%$2d $table,//%$3s $subTable ? \"_\".$subTable :\"\"//%$4s ); //连接的库 crm_admins的database 格式 activity_0 $this->connection = $database; parent::__construct($attributes); 5. 初始化表 initTable 1、查询出所有待初始化的表并合并 // 查询主账号分表模板表 $tables1 = DB::select(\"SHOW TABLES LIKE 'tpl_pub_%'\"); // 查询所有活动类型公用的活动下业务表模板表 $tables2 = DB::select(\"SHOW TABLES LIKE 'tpl_activity_%'\"); // 查询活动类型下业务表或活动扩展表模板表（兼容旧） $tables3 = DB::select(\"SHOW TABLES LIKE 'tpl_{$activity->activity_type}_%'\"); $tables = array_merge($tables1, $tables2, $tables3); // 查询活动组件模板表 tables4 foreach ($componentIds as $component) { if (! empty($this->componentConfig[$component])) { $tables = array_merge($tables, DB::select(\"SHOW TABLES LIKE 'tpl_component_{$this->componentConfig[$component]}_%'\")); } } 2、循环所有表，通过不同的规则生成表 [!TIP] table1 生成规则例子：tplpub_activity = sprintf('activity%d',$masterId) //按主账号分表 可以考虑在创建主账号的时候就生成主账号表 SELECT CONCAT_Ws('|',TABLE_NAME,TABLE_COMMENT) FROM information_schema.tables where table_schema = 'ccbhd' and table_name LIKE 'tpl_pub_%' 表名 注释 tpl_pub_activity 活动汇总基础信息表 tpl_pub_activity_benefits 活动权益表 tpl_pub_activity_benefits_batch 活动权益批次表 tpl_pub_activity_benefits_stock 活动权益库存表 tpl_pub_activity_benefits_tongji 活动权益统计表 tpl_pub_activity_indicator 活动指标表 tpl_pub_advert 广告表 tpl_pub_answer_group 答题分组表 tpl_pub_answer_question 答题题目表 tpl_pub_assetenhance_invitation_list 建行代发资产-邀请列表 tpl_pub_assetenhance_set_invitation 建行代发资产-邀请好友设置表 tpl_pub_assetenhance_set_raking 建行代发资产-邀请好友排行榜 tpl_pub_assetenhance_set_user 建行代发资产-本人资产提升设置表 tpl_pub_black_coupon 黑名单导入批次表 tpl_pub_black_fail_log 黑名单导入错误日志 tpl_pub_black_list 黑名单表 tpl_pub_component_comment 评论组件表 tpl_pub_component_draw 抽奖组件表 tpl_pub_component_friend 好友组件配置表 tpl_pub_component_help 助力组件表 tpl_pub_component_rank 榜单组件表 tpl_pub_component_signup 报名组件表 tpl_pub_component_task 任务组件表 tpl_pub_gather_activity_draw_user_ext 抽奖组件用户扩展-汇总表 tpl_pub_gather_activity_draw_user_win 抽奖用户中奖表-汇总表 tpl_pub_gather_activity_user 活动用户用户-汇总表 tpl_pub_goods 商品表 tpl_pub_goods_code 电子券码表 tpl_pub_goods_coupon 电子券导入批次表 tpl_pub_goods_stock 商品库存表 tpl_pub_goods_user_win 商品中奖记录表 tpl_pub_group 活动分组表 tpl_pub_indicator 指标表 tpl_pub_integrate_activity tpl_pub_pay_order 支付订单表 tpl_pub_prize 奖品基础信息表 tpl_pub_prize_code 电子券码表 tpl_pub_prize_coupon 电子券导入批次表 tpl_pub_prize_stock 奖品库存表 tpl_pub_purchase_goods_pool 一分购商品池 tpl_pub_redpack_log 红包发放日志 tpl_pub_salary_task 代发工资-任务表 tpl_pub_salary_user_ext 用户扩展表 tpl_pub_salary_user_task 代发薪人礼-任务完成表 tpl_pub_wage_task 代发工资-任务表 tpl_pub_wage_user_task 代发工资任务完成表 tpl_pub_white_coupon 白名单导入批次表 tpl_pub_white_fail_log 白名单导入错误日志 tpl_pub_white_list 白名单列表 tpl_pub_white_list_log 白名单日志 [!TIP] tables2 生成规则：tplactivity_ccb_order = sprintf(\"%s_ccb_order%d_%d\",$activity_type,$masterId,$table); $table 可以没有 SELECT CONCAT_Ws('|',TABLE_NAME,TABLE_COMMENT) FROM information_schema.tables where table_schema = 'ccbhd' and table_name LIKE 'tpl_activity_%' 表名 注释 tpl_activity_ccb_order 用户ccb订单表 tpl_activity_indicator_result 指标完成结果表 tpl_activity_indicator_result_daylog 指标完成天结果表 tpl_activity_indicator_result_log 指标结果日志表 tpl_activity_share_visit_log 分享访问日志 tpl_activity_user 活动用户用户表 [!TIP] tables3 生成规则：tplcrossborder_user_ext = sprintf(\"crossborder_user_ext%d_%d\",$masterId,$table);//$table 可以为空 //crossborder是活动类型 SELECT CONCAT_Ws('|',TABLE_NAME,TABLE_COMMENT) FROM information_schema.tables where table_schema = 'ccbhd' and table_name LIKE 'tpl_crossborder_%' 表名 注释 tpl_crossborder_user_ext 跨境分会场活动用户扩展表 [!TIP] tables4 组件表（精力有限先分析3个） 生成规则：tplcomponent_draw_ccb_right_order = sprintf('%s_component_draw_ccb_right_order%d_%s',$activity_type,$masterId,$table,$sub_tab) $table 可以为空，$sub_table 大部分为空 //抽奖 SELECT CONCAT_Ws('|',TABLE_NAME,TABLE_COMMENT) FROM information_schema.tables where table_schema = 'ccbhd' and table_name LIKE 'tpl_component_draw%' //报名 SELECT CONCAT_Ws('|',TABLE_NAME,TABLE_COMMENT) FROM information_schema.tables where table_schema = 'ccbhd' and table_name LIKE 'tpl_component_signup%' //任务 SELECT CONCAT_Ws('|',TABLE_NAME,TABLE_COMMENT) FROM information_schema.tables where table_schema = 'ccbhd' and table_name LIKE 'tpl_component_task%' [!TIP] 抽奖组件 表名 注释 tpl_component_draw_ccb_right_order 建行权益订单表 tpl_component_draw_ccb_right_user 建行权益用户表 tpl_component_draw_user_draw_log 抽奖组件抽奖日志表 tpl_component_draw_user_draw_num_log 抽奖组件用户抽奖次数变更日志表 tpl_component_draw_user_ext 抽奖组件用户扩展表 tpl_component_draw_user_win 抽奖组件用户中奖表 [!TIP] 报名组件 表名 注释 tpl_component_signup_callback 报名组件-跑批回馈表 tpl_component_signup_list 报名组件-纪录表 tpl_component_signup_relation 报名组件-报名&批次关系表 [!TIP] 任务组件 表名 注释 tpl_component_task_finish 指标完成结果表 tpl_component_task_reward 任务奖励 tpl_component_task_set 任务配置 tpl_component_task_user_result 用户结果集 6. 创建活动 initActivity activity_10000 10000是主账号 插入默认数据 7. 添加组件 componentCreate foreach ($components as $key => $component) { if (in_array($key, $this->componentConfig)) { $component_class_name = '\\\\App\\\\Models\\\\Component\\\\' . ucfirst($key); $component_class_name::create([ 'activity_id' => $activityId ] + $component); } } 8. 添加默认奖品 prizeCreate foreach ($prizes as $prize) { //没有看懂为什么要app这种方式 $data[] = app(PrizesService::class)->create($activityId, $activityType, $prize['jackpot'] ?? 1, $prize)['info']; } 奖品表：prize_10000 //是不是可以tpl_pub_prize_code 放到当前PrizesService.php $data->code_table = $data->id % app(ActivitysService::class)->getTableConfig()['tpl_pub_prize_code']; 库存表：prize_stock_10000 9. 添加默认商品 goodsCreate GoodsService->create 商品表：goods_10000 库存表：goods_stock_10000 10. 添加默认广告 advertCreate 广告表：advert_10000 11. 添加活动扩展 typeCreate $typeServiceClass = '\\\\App\\\\Services\\\\' . ucfirst($activityType) . 'Service'; $typeModelClass = '\\\\App\\\\Models\\\\Activity\\\\' . ucfirst($activityType); // 活动类型扩展专属的初始化逻辑 if (method_exists($typeServiceClass, 'create')) { // ...param $prizesData, $goodsData,$product $return = app($typeServiceClass)->create($activityId, $activityData, ...$param); } elseif (class_exists($typeModelClass)) { $return = $typeModelClass::create([ 'activity_id' => $activityId ] + $activityData); } 12. 返回结果前台重新安编辑进活动 左边的可见视图 是iframe直接引入的前台的地址 https://jxjkhd.kerlala.com/a/e/QPyoryZj?t=1621325920&s=b04d665f1546d849dc2635c2e7b3646a8d35e3ff16a26cc7d635e597818a4d44 13. 重要接口 activitys/getEditApiList 如何自定义返回接口（活动类型特殊） App\\Services\\Common\\SpecialService powered by Gitbook该文件最后修改时间： 2021-05-27 15:27:02 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"核心架构/活动编辑.html":{"url":"核心架构/活动编辑.html","title":"编辑活动","keywords":"","body":" [!TIP] 活动编辑 1. 路由 routes/web.php activitys/edit/{sn} 2. 控制器 Http/Controllers/Activity/ActivitysController edit 忽略之前旧活动的处理，重定向 路由 spa.php spa/activitys/edit/{sn} 控制器 Http/Controllers/Activity/SpaController return redirect()->route('spaEdit', request('sn')); $t = time(); return view('spa.edit', [ 'url' => route('spaIndex', [ 'sn' => request('sn'), '', '', '', 'view' => config('global.front_url') . '/a/e/' . request('sn') . '?t=' . $t . '&s=' . hash(\"sha256\", 'x^VUr4^xeXIi*CV~' . $t) ]) ]); 实际上走到了spaIndex 3. 视图层 spa.crossborder.v1.index $version = Product::where('id', request()->attributes->get('productId'))->value('version'); $view = 'spa.' . request()->attributes->get('activityType') . '.' . ($version ?? 'v1') . '.index'; 4. 保存接口 路由 web.php下 activitys.save Http/Controllers/Activity/ActivitysController save 4.1 校验活动信息 [!NOTE] 校验活动信息以及权限(优化点，放到服务层或者做一个中间件) $status = Activity::where('activity_id', $activityId)->value('status'); // 活动开启后 校验权限 if ($status == 1 && ! in_array(\\Route::currentRouteName(), Auth::guard('admin')->user()->getRules())) { return Formater::ajaxReturn(false, '无权访问', 'other'); } 4.2 获取验证数据 [!NOTE] 获取验证数据 $validated = $this->activitysService->getValidated($activityId, $activityType, $productId); 服务层 App/Services/ActivitysService getValidated 优化点：万物皆组件 1、获取活动验证信息 $return['activity'] = app(ActivityRequest::class)->validated()['activity'] ?? []; 2、获取当前活动类型验证信息 $typeRequestClass = '\\\\App\\\\Http\\\\Requests\\\\Activity\\\\' . ucfirst($activityType) . 'Request'; if (class_exists($typeRequestClass)) { $return[$activityType] = app($typeRequestClass)->validated()[$activityType] ?? []; } 3、获取各个组件的验证信息 foreach ($this->getProductComponentIds($productId) as $componentId) { if (! empty($this->componentConfig[$componentId])) { $componentRequestClass = '\\\\App\\\\Http\\\\Requests\\\\Component\\\\' . ucfirst($this->componentConfig[$componentId]) . 'Request'; $return['components'][$this->componentConfig[$componentId]] = app($componentRequestClass)->validated()[$this->componentConfig[$componentId]] ?? []; } } 4、奖品验证信息 $return['prize'] = app(PrizeRequest::class)->validated()['prize'] ?? []; 5、商品验证信息 $return['goods'] = app(GoodsRequest::class)->validated()['goods'] ?? []; 6、广告验证信息 $return['advert'] = app(AdvertRequest::class)->validated()['advert'] ?? []; 7、任务验证信息 $return['task'] = app(TaskRequest::class)->validated()['task'] ?? []; 8、指标任务验证信息 $return['indicatorTask'] = app(IndicatorTaskRequest::class)->validated()['indicatorTask'] ?? []; 4.3 奖品数据判断加完善 [!NOTE] 奖品数据判断加完善 为什么不做到服务层或者验证器 4.4 活动专属保存方法 [!NOTE] 活动专属保存方法 if (!empty($validated[$activityType])){ // 保存活动类型扩展信息 $typeReturn = $this->activitysService->saveTypeData($activityId, $activityType, $validated[$activityType]); if (! $typeReturn['result']) { return Formater::ajaxReturn(FALSE, '保存失败了:'.$typeReturn['error']); } } saveTypeData: 实际上指到了活动类型的服务层 saveInfo方法，如果存在的话 4.5 保存活动信息 [!NOTE] 保存活动信息 $activityReturn = $this->activitysService->save($activityId, $validated['activity']); 更新 activity_10000表，清除缓存 4.6 保存组件信息 [!NOTE] 保存组件信息 为什么不做到服务层 if(!empty($validated['components'])){ $componentReturn = $this->activitysService->saveComponent($activityId, $validated['components']); if (! $componentReturn['result']) { return Formater::ajaxReturn(FALSE, '保存失败了'); } } saveComponent: $componentModelClass = '\\\\App\\\\Models\\\\Component\\\\' . ucfirst($key); app($componentModelClass)->saveData($activityId, $component); 调用各个组件的model层saveData方法 4.7 保存奖品信息 [!NOTE] 保存奖品信息 代码不贴了自己看吧 4.8 保存广告信息 [!NOTE] 保存广告信息 $this->activitysService->saveAdvert($activityId,$validated['advert']); saveAdvert: 表 advert_10000表更新 4.9 保存指标任务信息 [!NOTE] 保存指标任务信息 if(! empty($validated['indicatorTask'])){ $IndicatorService = new IndicatorService(); $IndicatorService->saveIndicatorTask($activityId,$validated['indicatorTask']); } saveIndicatorTask: 表 activity_indicator_10000创建更新 powered by Gitbook该文件最后修改时间： 2021-05-27 18:47:48 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"核心架构/hd.html":{"url":"核心架构/hd.html","title":"活动访问","keywords":"","body":"1、活动访问流程 [!TIP] 活动路径 http://ccbhdbch.kerlala.com/a/41/QPyoryZj 经历了哪些处理 1.1、路由文件 routes/common.php Route::get('a/{pid}/{sn}/{action?}/{param1?}/{param2?}', 'Common\\ActivityController@index')->middleware(['check.activity', 'check.redirect', 'check.oauth', 'sync.signup'])->name('spa.index'); 1.2 中间件层 [!TIP] 在app/Http/Kernel.php 1、系统全局中间件 2、web中间组 3、定义的中间件 （重点） 1.2.1 check.activity //检测路由sn参数 $activitySn = $request->route('sn'); // 活动ID if (empty($activitySn)) { return $next($request); } // 解析路由参数 activity_route表信息 、同时request全局参数注册 $params = $this->parseRoute($activitySn); //主要Model层使用 $params = [ 'hd_activity_database' => 'activity_' . $activity->database,//映射的库的链接 'hd_activity_table_id' => $activity->table, // 映射额分表 'hd_activity_type' => $activity->activity_type, //活动类型 'hd_activity_id' => $activity->id,//活动全局ID 'master_id' => $activity->master_id,//主账号ID 'sub_table' => ! empty($activity->sub_table) ? json_decode($activity->sub_table, true) : [], 'is_show_page' => $this->checkShowPage($activitySn) //是否显式授权 ]; if (empty($params)) { abort(404); } return $next($request); 1.2.2 check.redicet 不贴代码了，主要看config/redirect.php 文件 1.2.3 check.oauth 1、获取平台信息 根据pid Platform::getPlatformById($platformId); //platforms 在系统后台配置 2、request全局属性添加 3、具体的授权处理，去除多余参数生成url跳转(主要检测_ident,code,state),如果带return_url就重定向带上open_id $wxComponetService = app(WxComponentService::class); $oauthRes = $wxComponetService->oauth((array) $platform, request()->attributes->get('is_show_page', 1)); 建行全平台授权在:App\\Services\\Oauth\\Ccball.php; 1、解析app传的参数和签名等等 走app授权 授权成功会同步platform_users_0 +session 2、微信环境就走微信授权 测试环境授权成功会同步 platform_users_0 + session 生产环境授权不同步 3、如果有客户状态直接返回 获取的session缓存 4、返回 1041 未授权 5、根据授权信息查询全平台记录 activity_0:ccb_many_platform_relation 6、查询全平台用户信息platform_users_0 +同步session 1.2.4 sync.signup 1、判断如果授权就开始逻辑 2、获取平台用户信息 platform_users_0表 实际是session缓存的值 3、判断关联了报名组件5的处理 4、ccb_all_platform_user_ext 表信息 5、判断条件生成报名信息 6、获取活动用户信息不存在就同步 app\\Models\\Common\\ActivityUser （先获取平台用户->在同步到活动用户表 crossborder_user_10000_1） crossborder活动类型、10000=masterId 1 = table(分表) 7、首次用户表不存在的时候上传行内报名数据 App\\Services\\Common\\JpartnerService 1.3 控制器 Common/ActivityController.php 1、获取活动产品信息，主要拿组件信息 2、判断u参数，处理分享逻辑（单个活动逻辑或者活动分享记录表 crossborder_share_visit_log_10000_1） 3、判断好友组件开启，记录好友关系 crossborder_component_friend_log_10000_1_12 4、如果在授权情况下初始化抽奖组件 5、初始化抽奖用户 crossborder_draw_user_ext_10000_1 有则返回没有就创建并且记录抽奖次数遏制 crossborder_component_draw_user_draw_num_log_10000_1 6、如果有分享信息,就加分享机会 由创建产品 draw.forward_draw_count_limit 开关是否加 7、初始化助力组件,初始化助力用户 crossborder_component_help_user_ext_10000_1 表 8、初始化任务组件 9、数据统计处理 10、展示视图，传数据，实际上走到前端路由 1.4 详细解读下任务组件初始化 App\\Services\\Component\\Task\\TaskService shareEvent 1、taskSetCacheByCode()方法获取任务配置 crossborder_component_task_set_10000_1 and crossborder_component_task_reward_10000_1 2、createTask()创建具体任务类 根据set表code检索对应的任务类并返回 3、判断任务是否下线 4、判断任务有效时间 5、判断活动类injectBeforeTaskShare方法是否存在，存在则执行（参数校验） 6、执行任务类完成任务finish方法 纪录：crossborder_component_task_finish_10000_1(任务完成结果表) 纪录：crossborder_component_task_user_result_10000_1(用户任务完成中奖纪录表) 7、返回成功 App\\Services\\Component\\Task\\TaskService inviteEvent 邀请事件处理，基本和上一致 2、指标跑批逻辑图 powered by Gitbook该文件最后修改时间： 2021-05-26 18:24:47 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"crm公共/":{"url":"crm公共/","title":"crm公共","keywords":"","body":" [!NOTE] 主要看几大组件的公共接口以及活动相关的接口 powered by Gitbook该文件最后修改时间： 2021-05-27 15:37:56 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"crm公共/抽奖.html":{"url":"crm公共/抽奖.html","title":"组件-抽奖","keywords":"","body":"抽奖 powered by Gitbook该文件最后修改时间： 2021-05-27 15:32:21 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"crm公共/报名.html":{"url":"crm公共/报名.html","title":"组件-报名","keywords":"","body":"报名 powered by Gitbook该文件最后修改时间： 2021-05-27 15:32:39 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"crm公共/任务.html":{"url":"crm公共/任务.html","title":"组件-任务","keywords":"","body":"任务 powered by Gitbook该文件最后修改时间： 2021-05-27 15:32:56 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"hd公共/":{"url":"hd公共/","title":"hd公共","keywords":"","body":"hd公共.md powered by Gitbook该文件最后修改时间： 2021-05-24 17:53:16 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "},"综合话题/":{"url":"综合话题/","title":"综合话题","keywords":"","body":"综合话题.md powered by Gitbook该文件最后修改时间： 2021-05-24 17:54:12 由 Rocket 通过 知识共享 署名-相同方式共享 4.0协议发布 "}}